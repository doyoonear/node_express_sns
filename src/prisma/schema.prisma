generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  name        String
  email       String
  password    String
  profile     Profile?
  created_at  DateTime     @default(now())
  followers   Follower[]
  followees   Followee[]
  posts       Post[]
  comments    Comment[]
  likes       Like[]
  collections Collection[]
}

model Profile {
  id      Int     @id @default(autoincrement())
  img_src String?
  bio     String?
  user    User    @relation(fields: [userId], references: [id])
  userId  Int
}

model Comment {
  id          Int    @id @default(autoincrement())
  content     String
  commenter   User   @relation(fields: [commenterId], references: [id])
  commenterId Int
  post        Post   @relation(fields: [postId], references: [id])
  postId      Int
}

model Image {
  id               Int          @id @default(autoincrement())
  srcUrl           String
  parentCollection Collection[]
  post             Post         @relation(fields: [postId], references: [id])
  postId           Int
}

model Followee {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Follower {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model Hashtag {
  id      Int    @id @default(autoincrement())
  content String
}

model Post {
  id               Int             @id @default(autoincrement())
  title  String
  content          String?
  created_at       DateTime        @default(now())
  comments         Comment[]
  images           Image[]
  likes            Like[]
  parentCollection CollectedPost[]
  postedBy         User            @relation(fields: [userId], references: [id])
  userId           Int
}

model Collection {
  id          Int             @id @default(autoincrement())
  title       String
  posts       CollectedPost[]
  collectedBy User            @relation(fields: [collectorId], references: [id])
  collectorId Int
  coverImage  Image           @relation(fields: [imageId], references: [id])
  imageId     Int
}

model CollectedPost {
  post         Post       @relation(fields: [postId], references: [id])
  postId       Int
  collection   Collection @relation(fields: [collectionId], references: [id])
  collectionId Int
  collectedAt  DateTime   @default(now())

  @@id([postId, collectionId])
}
